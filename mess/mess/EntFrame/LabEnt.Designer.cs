//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace mess.EntFrame
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MyDataEntities8 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MyDataEntities8 object using the connection string found in the 'MyDataEntities8' section of the application configuration file.
        /// </summary>
        public MyDataEntities8() : base("name=MyDataEntities8", "MyDataEntities8")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyDataEntities8 object.
        /// </summary>
        public MyDataEntities8(string connectionString) : base(connectionString, "MyDataEntities8")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyDataEntities8 object.
        /// </summary>
        public MyDataEntities8(EntityConnection connection) : base(connection, "MyDataEntities8")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lab_table> Lab_table
        {
            get
            {
                if ((_Lab_table == null))
                {
                    _Lab_table = base.CreateObjectSet<Lab_table>("Lab_table");
                }
                return _Lab_table;
            }
        }
        private ObjectSet<Lab_table> _Lab_table;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lab_table EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLab_table(Lab_table lab_table)
        {
            base.AddObject("Lab_table", lab_table);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDataModel4", Name="Lab_table")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lab_table : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lab_table object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="fname">Initial value of the fname property.</param>
        /// <param name="lab">Initial value of the lab property.</param>
        /// <param name="dateofuse">Initial value of the dateofuse property.</param>
        /// <param name="timeofuse">Initial value of the timeofuse property.</param>
        /// <param name="purpose">Initial value of the purpose property.</param>
        public static Lab_table CreateLab_table(global::System.Int32 id, global::System.String fname, global::System.String lab, global::System.DateTime dateofuse, global::System.TimeSpan timeofuse, global::System.String purpose)
        {
            Lab_table lab_table = new Lab_table();
            lab_table.id = id;
            lab_table.fname = fname;
            lab_table.lab = lab;
            lab_table.dateofuse = dateofuse;
            lab_table.timeofuse = timeofuse;
            lab_table.purpose = purpose;
            return lab_table;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fname
        {
            get
            {
                return _fname;
            }
            set
            {
                OnfnameChanging(value);
                ReportPropertyChanging("fname");
                _fname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fname");
                OnfnameChanged();
            }
        }
        private global::System.String _fname;
        partial void OnfnameChanging(global::System.String value);
        partial void OnfnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String lab
        {
            get
            {
                return _lab;
            }
            set
            {
                OnlabChanging(value);
                ReportPropertyChanging("lab");
                _lab = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("lab");
                OnlabChanged();
            }
        }
        private global::System.String _lab;
        partial void OnlabChanging(global::System.String value);
        partial void OnlabChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateofuse
        {
            get
            {
                return _dateofuse;
            }
            set
            {
                OndateofuseChanging(value);
                ReportPropertyChanging("dateofuse");
                _dateofuse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateofuse");
                OndateofuseChanged();
            }
        }
        private global::System.DateTime _dateofuse;
        partial void OndateofuseChanging(global::System.DateTime value);
        partial void OndateofuseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan timeofuse
        {
            get
            {
                return _timeofuse;
            }
            set
            {
                OntimeofuseChanging(value);
                ReportPropertyChanging("timeofuse");
                _timeofuse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timeofuse");
                OntimeofuseChanged();
            }
        }
        private global::System.TimeSpan _timeofuse;
        partial void OntimeofuseChanging(global::System.TimeSpan value);
        partial void OntimeofuseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String purpose
        {
            get
            {
                return _purpose;
            }
            set
            {
                OnpurposeChanging(value);
                ReportPropertyChanging("purpose");
                _purpose = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("purpose");
                OnpurposeChanged();
            }
        }
        private global::System.String _purpose;
        partial void OnpurposeChanging(global::System.String value);
        partial void OnpurposeChanged();

        #endregion

    
    }

    #endregion

    
}
